{
  "entities": {
    "NewsArticle": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NewsArticle",
      "type": "object",
      "description": "Represents a news article.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the news article."
        },
        "title": {
          "type": "string",
          "description": "The title of the news article."
        },
        "summary": {
          "type": "string",
          "description": "A 60-word summary of the news article generated by AI."
        },
        "content": {
          "type": "string",
          "description": "The full content of the news article."
        },
        "source": {
          "type": "string",
          "description": "The source of the news article (e.g., 'New York Times')."
        },
        "url": {
          "type": "string",
          "description": "The URL of the original news article.",
          "format": "uri"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N NewsArticle)"
        },
        "publicationDate": {
          "type": "string",
          "description": "The date and time when the news article was published.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "title",
        "summary",
        "content",
        "source",
        "url",
        "categoryId",
        "publicationDate"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category of news (e.g., Sports, Politics, Technology).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "name": {
          "type": "string",
          "description": "The name of the category (e.g., 'Sports')."
        },
        "description": {
          "type": "string",
          "description": "A description of the category."
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "UserPreference": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserPreference",
      "type": "object",
      "description": "Represents a user's preference for a particular category.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user preference."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N UserPreference)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N UserPreference)"
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "The username of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "Admin": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Admin",
      "type": "object",
      "description": "Represents an administrator of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the admin."
        },
        "username": {
          "type": "string",
          "description": "The username of the admin."
        },
        "email": {
          "type": "string",
          "description": "The email address of the admin.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Accessible only to the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/preferences/{preferenceId}",
        "definition": {
          "entityName": "UserPreference",
          "schema": {
            "$ref": "#/backend/entities/UserPreference"
          },
          "description": "Stores user preferences. Accessible only to the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "preferenceId",
              "description": "The unique identifier of the user preference."
            }
          ]
        }
      },
      {
        "path": "/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores news categories. Readable by all authenticated users, and manageable by admins.",
          "params": [
            {
              "name": "categoryId",
              "description": "The unique identifier of the category."
            }
          ]
        }
      },
      {
        "path": "/news_articles/{articleId}",
        "definition": {
          "entityName": "NewsArticle",
          "schema": {
            "$ref": "#/backend/entities/NewsArticle"
          },
          "description": "Stores news articles. Readable by all authenticated users, and manageable by admins.",
          "params": [
            {
              "name": "articleId",
              "description": "The unique identifier of the news article."
            }
          ]
        }
      },
      {
        "path": "/roles_admin/{userId}",
        "definition": {
          "entityName": "Admin",
          "schema": {
            "$ref": "#/backend/entities/Admin"
          },
          "description": "Indicates admin privileges. Existence of a document with the user's ID grants admin rights.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the admin."
            }
          ]
        }
      }
    ],
    "reasoning": "This design separates user-specific data from administrative data to ensure a clear separation of concerns and simplified security rules. User preferences are stored under their respective user ID, enabling easy retrieval and personalized feeds. News articles and categories are stored in top-level collections managed by admins. The admin role is managed via the `/roles_admin/{uid}` collection.\n\n*   **Authorization Independence:** The structure avoids hierarchical authorization dependencies. For example, access to user preferences is determined solely by the user's ID and doesn't require reading data from other collections. Categories and NewsArticles are readable by any authenticated user.\n*   **QAPs (Query Authorization and Privacy):**\n    *   List of Categories and NewsArticles are readable by any authenticated user, supporting open access to this information.\n    *   User preferences are private and only readable by the authenticated user.\n    *   Admin roles are explicitly defined, which allows filtering and restricting access based on these roles."
  }
}